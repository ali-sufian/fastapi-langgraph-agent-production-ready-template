name: Build and push to Docker Hub

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build-and-push:
    name: Build and push to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install utilities
        run: |
          sudo apt-get update
          sudo apt-get install -y make

      - name: Sanitize repository name
        id: sanitize
        run: |
          REPO_NAME=$(echo "${{ github.event.repository.name }}" | sed 's/^\///' | tr '[:upper:]' '[:lower:]' | sed 's/[^a-z0-9]/-/g')
          echo "REPO_NAME=${REPO_NAME}" >> $GITHUB_ENV

      - name: Build Image
        run: |
          make docker-build-env ENV=development
          docker tag fastapi-langgraph-template:development ghcr.io/ali-sufian/fastapi-langgraph-agent-production-ready-template-app:${{ github.sha }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Push Image
        run: |
          docker push ghcr.io/ali-sufian/fastapi-langgraph-agent-production-ready-template-app:${{ github.sha }}
        env:
          DOCKER_USERNAME: $username
          DOCKER_PASSWORD: $password

      - name: Azure login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Update Azure Container App with proper env vars
        run: |
          az containerapp update \
            --name fastapi-langgraph \
            --resource-group rg-assets \
            --image ghcr.io/ali-sufian/fastapi-langgraph-agent-production-ready-template-app:${{ github.sha }} \
            --set-env-vars \
              APP_ENV=development \
              PROJECT_NAME="Web Assistant" \
              VERSION=1.0.0 \
              DEBUG=true \
              API_V1_STR=/api/v1 \
              ALLOWED_ORIGINS="http://localhost:3000,http://localhost:8000" \
              LANGFUSE_PUBLIC_KEY="${{ secrets.LANGFUSE_SECRET_PUBLIC }}" \
              LANGFUSE_SECRET_KEY="${{ secrets.LANGFUSE_SECRET_PRIV }}" \
              LANGFUSE_HOST=https://cloud.langfuse.com \
              LLM_API_KEY="${{ secrets.OPENAPI_KEY }}" \
              LLM_MODEL=gpt-4o-mini \
              DEFAULT_LLM_TEMPERATURE=0.2 \
              JWT_SECRET_KEY="your-jwt-secret-key" \
              JWT_ALGORITHM=HS256 \
              JWT_ACCESS_TOKEN_EXPIRE_DAYS=30 \
              POSTGRES_URL="postgresql://fastapidb:root.123@ali-fastapi.postgres.database.azure.com:5432/postgres" \
              POSTGRES_POOL_SIZE=5 \
              POSTGRES_MAX_OVERFLOW=10 \
              RATE_LIMIT_DEFAULT="1000 per day,200 per hour" \
              RATE_LIMIT_CHAT="100 per minute" \
              RATE_LIMIT_CHAT_STREAM="100 per minute" \
              RATE_LIMIT_MESSAGES="200 per minute" \
              RATE_LIMIT_LOGIN="100 per minute" \
              LOG_LEVEL=DEBUG \
              LOG_FORMAT=console
