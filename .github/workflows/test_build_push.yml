name: Build and push to Docker Hub

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build-and-push:
    name: Build and push to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install utilities
        run: |
          sudo apt-get update
          sudo apt-get install -y make

      - name: Sanitize repository name
        id: sanitize
        run: |
          REPO_NAME=$(echo "${{ github.event.repository.name }}" | sed 's/^\///' | tr '[:upper:]' '[:lower:]' | sed 's/[^a-z0-9]/-/g')
          echo "REPO_NAME=${REPO_NAME}" >> $GITHUB_ENV

      - name: Build Image
        run: |
          make docker-build-env ENV=development
          docker tag fastapi-langgraph-template:development ghcr.io/ali-sufian/fastapi-langgraph-agent-production-ready-template-app:${{ github.sha }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Push Image
        run: |
          docker push ghcr.io/ali-sufian/fastapi-langgraph-agent-production-ready-template-app:${{ github.sha }}
        env:
          DOCKER_USERNAME: $username
          DOCKER_PASSWORD: $password

      - name: Azure login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Build and push Docker image
        run: |
          docker build \
            --build-arg APP_ENV=$APP_ENV \
            --build-arg POSTGRES_URL="$POSTGRES_URL" \
            --build-arg LLM_API_KEY="$LLM_API_KEY" \
            --build-arg LANGFUSE_PUBLIC_KEY="$LANGFUSE_PUBLIC_KEY" \
            --build-arg LANGFUSE_SECRET_KEY="$LANGFUSE_SECRET_KEY" \
            --build-arg JWT_SECRET_KEY="$JWT_SECRET_KEY" \
            -t ghcr.io/ali-sufian/fastapi-langgraph-agent-production-ready-template-app:${{ github.sha }} .
          docker push ghcr.io/ali-sufian/fastapi-langgraph-agent-production-ready-template-app:${{ github.sha }}

      - name: Update Azure Container App with all .env variables
        run: |
          # Generate --set-env-vars dynamically from .env.development
          ENV_VARS=$(while IFS= read -r line; do
            if [[ "$line" =~ ^[A-Z_] && ! "$line" =~ ^# ]]; then
              key=$(echo "$line" | cut -d '=' -f1)
              value=$(echo "$line" | cut -d '=' -f2- | sed 's/"/\\"/g')
              echo "$key=\\\"$value\\\","
            fi
          done < .env.development | tr -d '\n' | sed 's/,$//')

          az containerapp update \
            --name fastapi-langgraph \
            --resource-group rg-assets \
            --image ghcr.io/ali-sufian/fastapi-langgraph-agent-production-ready-template-app:${{ github.sha }} \
            --set-env-vars "$ENV_VARS"
